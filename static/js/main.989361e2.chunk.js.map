{"version":3,"sources":["components/layout/bounce.gif","components/layout/Navbar.js","context.js","components/layout/Spinner.js","components/tracks/Song.js","components/tracks/Tracks.js","components/tracks/Search.js","components/layout/Index.js","components/tracks/Lyrics.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","Context","React","createContext","reducer","state","action","type","Object","objectSpread","track_list","payload","heading","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","dispatch","setState","inherits","createClass","key","value","_this2","axios","get","then","res","data","message","body","catch","err","console","log","props","children","Component","Consumer","Spinner","src","bounce","alt","style","width","margin","display","Song","minHeight","index_es","icon","faPlay","track","track_name","faSnowman","artist_name","faCompactDisc","album_name","Link","to","track_id","faEye","Tracks","undefined","layout_Spinner","Fragment","map","item","tracks_Song","Search","trackName","searchTrack","e","preventDefault","target","faMusic","onSubmit","bind","name","onChange","Index","tracks_Search","tracks_Tracks","Lyrics","lyrics","match","params","id","keys","faEyeSlash","lyrics_body","album_id","primary_genres","music_genre_list","music_genre","music_genre_name","dist_default","format","updated_time","explicit","lyrics_copyright","App","context_Provider","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,4OCUzBC,SARA,WACX,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gCAAhB,uECFNC,EAAUC,IAAMC,gBAChBC,EAAU,SAACC,EAAOC,GAEpB,OAAOA,EAAOC,MACV,IAAK,gBACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAH,EADP,CAEIK,WAAYJ,EAAOK,QACnBC,QAAS,qBAOZC,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAR,OAAAS,EAAA,EAAAT,CAAAU,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAR,OAAAiB,EAAA,EAAAjB,CAAAU,MAAAH,EAAAP,OAAAkB,EAAA,EAAAlB,CAAAK,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAW,OAAAP,MACIjB,MAAQ,CACJK,WAAa,GAGbE,QAAS,0BACTkB,SAAU,SAAAxB,GAAM,OAAIU,EAAKe,SAAS,SAAA1B,GAAK,OAAID,EAAQC,EAAOC,OANlEU,EAAA,OAAAR,OAAAwB,EAAA,EAAAxB,CAAAK,EAAAC,GAAAN,OAAAyB,EAAA,EAAAzB,CAAAK,EAAA,EAAAqB,IAAA,oBAAAC,MAAA,WASwB,IAAAC,EAAAlB,KAChBmB,IACGC,IADH,gLAIGC,KAAK,SAAAC,GAEJJ,EAAKL,SAAS,CAAErB,WAAa8B,EAAIC,KAAKC,QAAQC,KAAKjC,eAEpDkC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAlBpC,CAAAX,IAAA,SAAAC,MAAA,WAsBQ,OACItC,EAAAC,EAAAC,cAACE,EAAQY,SAAT,CAAkBsB,MAAOjB,KAAKb,OACxBa,KAAK8B,MAAMC,cAxB7BpC,EAAA,CAA8BqC,aA8BjBC,EAAWlD,EAAQkD,0BChCjBC,EAbC,WACZ,OACIvD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OACAsD,IAAKC,IACLC,IAAI,aACJC,MAAQ,CAAEC,MAAO,QACjBC,OAAQ,YACRC,QAAS,mCCiBNC,EAtBF,SAACZ,GACV,OACInD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsBwD,MAAO,CAAEK,UAAW,UACrDhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aACTH,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAiBC,KAAMC,MAA/B,eADJ,IACkEhB,EAAMiB,MAAMC,WAC1ErE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAiBC,KAAMI,MAA/B,kBAA2DnB,EAAMiB,MAAMG,aACvEvE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAiBC,KAAMM,MAA/B,iBAA8DrB,EAAMiB,MAAMK,YAC1EzE,EAAAC,EAAAC,cAAA,YAEJF,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAMC,GAAE,gBAAA3C,OAAkBmB,EAAMiB,MAAMQ,UAAYzE,UAAU,4BACxDH,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAiBC,KAAMW,MAD3B,oBCYLC,EA1BA,WACX,OACI9E,EAAAC,EAAAC,cAACoD,EAAD,KACM,SAAAhB,GAAS,IAECzB,EAAuByB,EAAvBzB,WAAWE,EAAYuB,EAAZvB,QAEnB,OAAyB,IAAtBF,EAAWW,aAA+BuD,IAAflE,EACnBb,EAAAC,EAAAC,cAAC8E,EAAD,MAGHhF,EAAAC,EAAAC,cAACF,EAAAC,EAAMgF,SAAP,KACIjF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAoBY,GAClCf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACVU,EAAWqE,IAAI,SAAAC,GAAI,OAChBnF,EAAAC,EAAAC,cAACkF,EAAD,CAAM/C,IAAK8C,EAAKf,MAAMQ,SAAUR,MAAOe,EAAKf,eCmDjEiB,6MAhEX7E,MAAQ,CACJ8E,UAAW,MASfC,YAAc,SAACtD,EAAUuD,GACrBA,EAAEC,iBACFjD,IACCC,IADD,8FAAAT,OAEkGb,EAAKX,MAAM8E,UAF7G,qFAIC5C,KAAK,SAAAC,GAEFV,EAAS,CACLvB,KAAM,gBACNI,QAAS6B,EAAIC,KAAKC,QAAQC,KAAKjC,aAGnCM,EAAKe,SAAS,CAAEoD,UAAW,OAI9BvC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,8EAvBpBwC,GACNnE,KAAKa,SAAS,CACVoD,UAAYE,EAAEE,OAAOpD,yCAwBpB,IAAAC,EAAAlB,KACL,OACIrB,EAAAC,EAAAC,cAACoD,EAAD,KACK,SAAAhB,GAAS,IAEEL,EAAaK,EAAbL,SACR,OACIjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBACVH,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAiBC,KAAMyB,MAD3B,sBAGA3F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAb,uCACAH,EAAAC,EAAAC,cAAA,QAAM0F,SAAUrD,EAAKgD,YAAYM,KAAMtD,EAAMN,IACzCjC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,cACbH,EAAAC,EAAAC,cAAA,SAAOQ,KAAO,OACdP,UAAY,+BACZ2F,KAAO,YACPxD,MAASC,EAAKL,SAASoD,UACvBS,SAAYxD,EAAKwD,SAASF,KAAKtD,MAGnCvC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uCAClBO,KAAK,UADL,0BApDX2C,aCSN2C,EAXD,WACV,OACIhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACF,EAAAC,EAAMgF,SAAP,KACIjF,EAAAC,EAAAC,cAAC+F,EAAD,MACAjG,EAAAC,EAAAC,cAACgG,EAAD,0BCsEDC,6MArEX3F,MAAQ,CACJ4D,MAAO,GACPgC,OAAQ,uFAGQ,IAAA7D,EAAAlB,KAChBmB,IACCC,IADD,mGAAAT,OAEqGX,KAAK8B,MAAMkD,MAAMC,OAAOC,GAF7H,6CAIC7D,KAAK,SAAAC,GAGF,OAFAJ,EAAKL,SAAS,CAAEkE,OAASzD,EAAIC,KAAKC,QAAQC,KAAKsD,SAExC5D,IACNC,IADM,4FAAAT,OAEyFO,EAAKY,MAAMkD,MAAMC,OAAOC,GAFjH,6CAIN7D,KAAK,SAAAC,GACFJ,EAAKL,SAAS,CAAEkC,MAAQzB,EAAIC,KAAKC,QAAQC,KAAKsB,UAEjDrB,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAE7BD,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,sCAI1B,OAA6C,IAAzCrC,OAAO6F,KAAKnF,KAAKb,MAAM4D,OAAO5C,QACW,IAA1Cb,OAAO6F,KAAKnF,KAAKb,MAAM4F,QAAQ5E,aACVuD,IAArB1D,KAAKb,MAAM4D,YACWW,IAAtB1D,KAAKb,MAAM4F,OACHpG,EAAAC,EAAAC,cAAC8E,EAAD,MAGHhF,EAAAC,EAAAC,cAACF,EAAAC,EAAMgF,SAAP,KACIjF,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAMC,GAAG,IAAIxE,UAAU,4BAA2BH,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAiBC,KAAMuC,MAAzE,sBACAzG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACTkB,KAAKb,MAAM4D,MAAMC,WADtB,OACsC,IAClCrE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAkBkB,KAAKb,MAAM4D,MAAMG,cAEvDvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAakB,KAAKb,MAAM4F,OAAOM,eAIpD1G,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACVH,EAAAC,EAAAC,cAAA,4BADJ,KACkCmB,KAAKb,MAAM4D,MAAMuC,UAEnD3G,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACVH,EAAAC,EAAAC,cAAA,+BADJ,KACqCmB,KAAKb,MAAM4D,MAAMwC,eAAeC,iBAAiB,GAAGC,YAAYC,kBAErG/G,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACVH,EAAAC,EAAAC,cAAA,qCADJ,KAC0CF,EAAAC,EAAAC,cAAC8G,EAAA/G,EAAD,CAAQgH,OAAO,cAAc5F,KAAKb,MAAM4F,OAAOc,eAEzFlH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACVH,EAAAC,EAAAC,cAAA,kCADJ,KACsE,IAA9BmB,KAAKb,MAAM4D,MAAM+C,SAAiB,KAAO,QAGrFnH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4BkB,KAAKb,MAAM4F,OAAOgB,0BAhE5D/D,aCoBNgE,mLAlBX,OACErH,EAAAC,EAAAC,cAACoH,EAAD,KACAtH,EAAAC,EAAAC,cAACqH,EAAA,EAAD,KACEvH,EAAAC,EAAAC,cAACF,EAAAC,EAAMgF,SAAP,KACEjF,EAAAC,EAAAC,cAACsH,EAAD,MACAxH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACuH,EAAA,EAAD,KACEzH,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAKC,UAAW7B,IAClChG,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAW1B,gBAV7C9C,aCIEyE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS5B,MACvB,iECXN6B,IAASC,OAAOnI,EAAAC,EAAAC,cAACkI,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/F,KAAK,SAAAgG,GACjCA,EAAaC","file":"static/js/main.989361e2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bounce.099e9c5b.gif\";","import React from 'react';\n\nconst Navbar = () => {\n    return (\n        <nav className=\"navbar  navbar-dark bg-dark mb-5\"> \n            <span className=\"navbar-brand mb-0 h1 mx-auto\">Get Your Lyrics</span>\n        </nav>\n    )\n} \n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\nconst reducer = (state, action) => {\n    // eslint-disable-next-line default-case\n    switch(action.type) {\n        case 'SEARCH_TRACKS':\n            return {\n                ...state,\n                track_list: action.payload,\n                heading: 'Search Results'\n            };\n        defualt:\n            return state;\n    }\n}\n\nexport class Provider extends Component {\n    state = {\n        track_list : [\n        \n        ],\n        heading: \"Top 10 Searched Songs..\",\n        dispatch: action => this.setState(state => reducer(state, action))\n    };\n\n    componentDidMount() {\n        axios\n          .get(\n            `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?page=1&page_size=10&country=us&f_has_lyrics=1&apikey=2e4b26ab30ca98377d9c0d61e50e11fa`\n          )\n          .then(res => {\n            //console.log(res.data);\n            this.setState({ track_list : res.data.message.body.track_list });\n        })\n          .catch(err => console.log(err));\n      }\n\n    render() {\n        return(\n            <Context.Provider value={this.state}>\n                { this.props.children }\n            </Context.Provider>\n        );\n    }\n}\n\nexport const Consumer = Context.Consumer;","import React from 'react';\nimport bounce from './bounce.gif';\n\nconst Spinner = () => {\n    return (\n        <div>\n            <img\n            src={bounce}\n            alt=\"loading...\"\n            style= {{ width: '200px',\n            margin: '40px auto',\n            display: 'block' }} />\n        </div>\n    )\n}\n\nexport default Spinner;","import React from 'react';\nimport  { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faSnowman, faCompactDisc, faEye } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst Song = (props) => {\n    return (\n        <div className=\"col-md-6\">\n            <div className=\"card mb-4 shadow-sm\" style={{ minHeight: '200px' }}>\n                <div className=\"card-body\">\n                    <p className=\"card-text\">\n                        <strong><FontAwesomeIcon icon={faPlay}/> Song name:</strong>:{props.track.track_name}\n                        <br/>\n                        <strong><FontAwesomeIcon icon={faSnowman}/> Artist Name : {props.track.artist_name}</strong>\n                        <br/>\n                        <strong><FontAwesomeIcon icon={faCompactDisc}/> Album Name : {props.track.album_name}</strong>\n                        <br/>\n                    </p>\n                    <Link to={`lyrics/track/${props.track.track_id}`} className=\"btn btn-danger btn-block\">\n                        <FontAwesomeIcon icon={faEye}/> View Lyrics\n                    </Link>\n                </div>        \n            </div>\n        </div>\n    )\n}\n\nexport default Song;\n","import React from 'react';\nimport { Consumer } from '../../context';\nimport Spinner from '../layout/Spinner';\nimport Song from './Song';\n\nconst Tracks = () => {\n    return (\n        <Consumer>\n            { value => {\n                //console.log(value);  \n                const { track_list,heading } = value;\n\n                if(track_list.length === 0 || track_list === undefined) {\n                    return <Spinner />\n                } else {\n                    return (\n                        <React.Fragment>\n                            <h3 className=\"text-center mb-4\">{heading}</h3>\n                            <div className=\"row\">\n                                {track_list.map(item => (\n                                    <Song key={item.track.track_id} track={item.track}/>\n                                ))}\n                            </div>\n                        </React.Fragment>\n                    )\n                }\n            }}\n        </Consumer>\n    )\n}\n\nexport default Tracks;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Consumer } from '../../context';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMusic } from '@fortawesome/free-solid-svg-icons';\n\nclass Search extends Component {\n    state = {\n        trackName: ''\n    }\n\n    onChange (e) {\n        this.setState({\n            trackName : e.target.value\n        })\n    }\n\n    searchTrack = (dispatch, e) => {\n        e.preventDefault();\n        axios\n        .get(\n            `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.search?q_track=${this.state.trackName}&page_size=10&page=1&s_track_rating=desc&apikey=2e4b26ab30ca98377d9c0d61e50e11fa`\n        )\n        .then(res => {\n            //console.log(res.data);\n            dispatch({\n                type: 'SEARCH_TRACKS',\n                payload: res.data.message.body.track_list\n            });\n            //console.log('before', this.state);\n            this.setState({ trackName: '' });\n            //console.log('after', this.state);\n\n        })\n        .catch(err => console.log(err));\n    }\n\n    render() {\n        return(\n            <Consumer>\n                {value => {\n                    //console.log('Check Dispatch', value);\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card card-body mb-4 p-4\">\n                            <h1 className=\"text-center display-4\">\n                                <FontAwesomeIcon icon={faMusic} /> Search For a Song\n                            </h1>\n                            <p className=\"lead text-center\">Get Lyrics for the songs you want..</p>   \n                            <form onSubmit={this.searchTrack.bind( this, dispatch )}>\n                                <div className = \"form-group\">\n                                    <input type = \"text\"\n                                    className = \"form-control form-control-lg\"\n                                    name = \"trackName\"\n                                    value = {this.setState.trackName}\n                                    onChange = {this.onChange.bind(this)}\n                                    />\n                                </div>\n                                <button className=\"btn btn-danger btn-lg btn-block mb-5\"\n                                type=\"submit\"> Get Lyrics\n                                </button>\n                            </form>\n                            \n                        </div>\n                    );\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Search;\n\n","import React from 'react';\nimport Tracks from '../tracks/Tracks';\nimport Search from '../tracks/Search';\n\nconst Index = () => {\n    return (\n        <div className=\"container\">\n            <React.Fragment>\n                <Search />\n                <Tracks />\n            </React.Fragment>\n        </div>\n    )\n}\n\nexport default Index;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Spinner from '../layout/Spinner';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEyeSlash } from '@fortawesome/free-solid-svg-icons';\nimport Moment from 'react-moment';\n\nclass Lyrics extends Component {\n\n    state = {\n        track: {},\n        lyrics: {}\n    }\n\n    componentDidMount() {\n        axios\n        .get(\n          `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${this.props.match.params.id}&apikey=2e4b26ab30ca98377d9c0d61e50e11fa`\n        )\n        .then(res => {\n            this.setState({ lyrics : res.data.message.body.lyrics });\n            //console.log(res.data);\n            return axios\n            .get(\n                `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.get?track_id=${this.props.match.params.id}&apikey=2e4b26ab30ca98377d9c0d61e50e11fa`\n            )\n            .then(res => {\n                this.setState({ track : res.data.message.body.track });\n            })\n            .catch(err => console.log(err));\n        })\n        .catch(err => console.log(err));\n    }\n\n    render () {\n        if (Object.keys(this.state.track).length === 0 \n        || Object.keys(this.state.lyrics).length === 0 \n        || this.state.track === undefined  \n        || this.state.lyrics === undefined ) {\n            return <Spinner />\n        } else {\n            return (\n                <React.Fragment>\n                    <Link to=\"/\" className=\"btn btn-dark btn-sm mb-4\"><FontAwesomeIcon icon={faEyeSlash}/> Go Back to Search</Link> \n                    <div className=\"card\">\n                        <h5 className=\"card-header\">\n                            {this.state.track.track_name} by {' '}\n                            <span className=\"text-secondary\">{this.state.track.artist_name}</span>\n                        </h5>\n                        <div className=\"card-body\">\n                            <p className=\"card-text\">{this.state.lyrics.lyrics_body}</p> \n                        </div>\n                    </div>\n\n                    <ul className=\"list-group mt-3\">\n                        <li className=\"list-group-item\">\n                            <strong>Album ID: </strong>: {this.state.track.album_id}\n                        </li>\n                        <li className=\"list-group-item\">\n                            <strong>Album Genre: </strong>: {this.state.track.primary_genres.music_genre_list[0].music_genre.music_genre_name}\n                        </li>\n                        <li className=\"list-group-item\">\n                            <strong>Last Updated Time: </strong>: <Moment format=\"MM-DD-YYYY\">{this.state.lyrics.updated_time}</Moment>\n                        </li>\n                        <li className=\"list-group-item\">\n                            <strong>Explicit Words? </strong>: {this.state.track.explicit === 0 ? 'No' : 'Yes' }\n                        </li>\n                    </ul>\n                    <br />\n                    <br />\n                    <br />\n                    <div className=\"btn btn-danger btn-block\">{this.state.lyrics.lyrics_copyright}</div>\n                </React.Fragment>\n            )\n        }\n    }\n}\n\nexport default Lyrics;","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport {BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Index from './components/layout/Index';\nimport { Provider } from './context';\nimport Lyrics from './components/tracks/Lyrics'\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n      <Router>\n        <React.Fragment >\n          <Navbar />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\"  component={Index} />\n              <Route exact path=\"/lyrics/track/:id\" component={Lyrics} />\n            </Switch>  \n          </div>\n        </React.Fragment>\n      </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}